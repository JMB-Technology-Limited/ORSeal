# Generated by Django 2.1.1 on 2018-09-02 20:51

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataAccessibilityForDisabilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('accessibility', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('organization_data_id', models.UUIDField(blank=True, null=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('service_at_location_data_id', models.UUIDField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('department', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataEligibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('eligibility', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataFunding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('organization_data_id', models.UUIDField(blank=True, null=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('source', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataHolidaySchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('service_at_location_data_id', models.UUIDField(blank=True, null=True)),
                ('closed', models.BooleanField(blank=True, null=True)),
                ('opens_at', models.TextField(blank=True, null=True)),
                ('closes_at', models.TextField(blank=True, null=True)),
                ('start_date', models.TextField(blank=True, null=True)),
                ('end_date', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('alternate_name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('organization_data_id', models.UUIDField(blank=True, null=True)),
                ('transportation', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('alternate_name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('tax_status', models.TextField(blank=True, null=True)),
                ('tax_id', models.TextField(blank=True, null=True)),
                ('year_incorporated', models.PositiveIntegerField(blank=True, null=True)),
                ('legal_status', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataPaymentAccepted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('payment', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('organization_data_id', models.UUIDField(blank=True, null=True)),
                ('contact_data_id', models.UUIDField(blank=True, null=True)),
                ('service_at_location_data_id', models.UUIDField(blank=True, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('extension', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataContact')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataOrganization')),
            ],
        ),
        migrations.CreateModel(
            name='DataPhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('attention', models.TextField(blank=True, null=True)),
                ('address_1', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('region', models.TextField(blank=True, null=True)),
                ('state_province', models.TextField(blank=True, null=True)),
                ('postal_code', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation')),
            ],
        ),
        migrations.CreateModel(
            name='DataPostalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('attention', models.TextField(blank=True, null=True)),
                ('address_1', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('region', models.TextField(blank=True, null=True)),
                ('state_province', models.TextField(blank=True, null=True)),
                ('postal_code', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation')),
            ],
        ),
        migrations.CreateModel(
            name='DataProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('organization_data_id', models.UUIDField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('alternate_name', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataOrganization')),
            ],
        ),
        migrations.CreateModel(
            name='DataRegularSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('service_at_location_data_id', models.UUIDField(blank=True, null=True)),
                ('weekday', models.PositiveIntegerField(blank=True, null=True)),
                ('opens_at', models.TextField(blank=True, null=True)),
                ('closes_at', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation')),
            ],
        ),
        migrations.CreateModel(
            name='DataRequiredDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('document', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('program_data_id', models.UUIDField(blank=True, null=True)),
                ('alternate_name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('interpretation_services', models.TextField(blank=True, null=True)),
                ('application_process', models.TextField(blank=True, null=True)),
                ('wait_time', models.TextField(blank=True, null=True)),
                ('fees', models.TextField(blank=True, null=True)),
                ('accreditations', models.TextField(blank=True, null=True)),
                ('licenses', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataProgram')),
            ],
        ),
        migrations.CreateModel(
            name='DataServiceArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('service_area', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataServiceAtLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('location_data_id', models.UUIDField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation')),
            ],
        ),
        migrations.CreateModel(
            name='DataServiceTaxonomy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('service_data_id', models.UUIDField(blank=True, null=True)),
                ('taxonomy_data_id', models.UUIDField(blank=True, null=True)),
                ('taxonomy_detail', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataTaxonomy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.UUIDField(blank=True, null=True, unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('parent_data_id', models.UUIDField(blank=True, null=True)),
                ('parent_name', models.TextField(blank=True, null=True)),
                ('vocabulary', models.TextField(blank=True, null=True)),
                ('other_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataTaxonomy')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=200, unique=True)),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='datataxonomy',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataservicetaxonomy',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataservicetaxonomy',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataservicetaxonomy',
            name='taxonomy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataTaxonomy'),
        ),
        migrations.AddField(
            model_name='dataserviceatlocation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataserviceatlocation',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataservicearea',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataservicearea',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataservice',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datarequireddocument',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datarequireddocument',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataregularschedule',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataregularschedule',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataregularschedule',
            name='service_at_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataServiceAtLocation'),
        ),
        migrations.AddField(
            model_name='dataprogram',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datapostaladdress',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataphysicaladdress',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataphone',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataphone',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataphone',
            name='service_at_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataServiceAtLocation'),
        ),
        migrations.AddField(
            model_name='datapaymentaccepted',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datapaymentaccepted',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataorganization',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datalocation',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataOrganization'),
        ),
        migrations.AddField(
            model_name='datalocation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datalanguage',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation'),
        ),
        migrations.AddField(
            model_name='datalanguage',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datalanguage',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataholidayschedule',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation'),
        ),
        migrations.AddField(
            model_name='dataholidayschedule',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataholidayschedule',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataholidayschedule',
            name='service_at_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataServiceAtLocation'),
        ),
        migrations.AddField(
            model_name='datafunding',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataOrganization'),
        ),
        migrations.AddField(
            model_name='datafunding',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datafunding',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='dataeligibility',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='dataeligibility',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='datacontact',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataOrganization'),
        ),
        migrations.AddField(
            model_name='datacontact',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
        migrations.AddField(
            model_name='datacontact',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataService'),
        ),
        migrations.AddField(
            model_name='datacontact',
            name='service_at_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataServiceAtLocation'),
        ),
        migrations.AddField(
            model_name='dataaccessibilityfordisabilities',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.DataLocation'),
        ),
        migrations.AddField(
            model_name='dataaccessibilityfordisabilities',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orseal_engine.Project'),
        ),
    ]
